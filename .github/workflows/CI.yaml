name: Formatter & CI
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        project: [server, client]

    steps:
      - uses: actions/checkout@v2

      # Setup Node.js for the specified version in the matrix
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          
      # Install dependencies for the respective project
      - name: Install Dependencies
        run: |
          cd ${{ matrix.project }}
          npm ci
          
      - name: Run Tests
        if: matrix.project == 'server'
        run: |
          cd ${{ matrix.project }}
          npm test -- --coverage
          
      - name: Check Test Coverage
        if: matrix.project == 'server'
        run: |
          cd ${{ matrix.project }}
          if [ -f coverage/coverage-summary.json ]; then
            COVERAGE=$(node -pe "require('./coverage/coverage-summary.json').total.lines.pct")
            if [ $(echo "$COVERAGE < 80" | bc -l) -eq 1 ]; then
              echo "Test coverage ($COVERAGE%) is below 80%"
              exit 1
            fi
          fi

      - name: Build and Run
        env:
          TESTING_ENV: ${{ secrets.TESTING_ENV }}
        run: |
          cd ${{ matrix.project }}
          if [ "${{ matrix.project }}" == "server" ]; then
            echo "$TESTING_ENV" > .env
            timeout --preserve-status 5s node index.js || true
          elif [ "${{ matrix.project }}" == "client" ]; then
            npm run build
          fi